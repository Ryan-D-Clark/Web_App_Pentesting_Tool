from socket import socket
import tkinter as tk
from tkinter import BOTH, E, EW, W, ttk
from tkinter import messagebox
from tkinter.messagebox import showerror
from threading import Thread
import re
import requests
import urllib3

import form_requester as fr


class Window:

    # MENU

    def exitProgram(self):
        exit()

    # END OF MENU

    # FORM REQUESTER FRAME

    def fr_clear(self):
        print("Clear")
    
    def fr_start(self):
        
        url = self.url_container.get().strip()
        if not re.match("^http://", url) and not re.match("^https://", url):
            url = "http://" + url
        try:
            requests.get(url)
            if requests.get(url).status_code != 200:
                messagebox.showerror(title=f"Status code: {requests.get(url).status_code}", message=f"There was an issue connecting to {url}")
                return

        except:
            messagebox.showerror(title=f"URL {url}", message=f"There was an issue connecting to {url}")
            return
        
        self.textbox.insert("end", f"{url}:\n")
        for payload in fr.form_requester(url):
            self.textbox.insert("end", payload + "\n")
        self.textbox.insert("end", "\n")




    
    # END OF FORM REQUESTER FRAME

    def __init__(self, master):
        menu = tk.Menu(master, bg="grey", font = ("sans", "8", "bold"), borderwidth=0)
        master.config(menu=menu)

        fileMenu = tk.Menu(menu)
        fileMenu.add_command(label="Item")
        fileMenu.add_command(label="Exit", command=self.exitProgram)
        menu.add_cascade(label="File", menu=fileMenu)

        editMenu = tk.Menu(menu)
        editMenu.add_command(label="Undo")
        editMenu.add_command(label="Redo")
        menu.add_cascade(label="Edit", menu=editMenu)

        self.style = ttk.Style()
        self.style.theme_use("default")
        self.style.configure("TNotebook.Tab", background="grey")
        self.style.configure("TNotebook", background="grey")
        self.style.configure("TFrame", background="light grey")
        self.style.configure("TLabel", background="light grey")

        self.style.configure("tk.TMenu", background="light grey")

        self.style.configure("TButton", background="light grey", borderwidth=1)
        self.style.map("TButton", foreground = [("active", "!disabled", "black")], background = [("active", "white")])

        self.master = master
        self.master.title("Web App Tools")
        self.master.geometry("600x600")
        self.master.minsize(600,600)
        self.notebook = ttk.Notebook(self.master, padding="1.5px")
        self.notebook.pack(fill=BOTH, expand = True)


        # TABS SECTION

        frame1 = ttk.Frame(self.notebook)
        frame2 = ttk.Frame(self.notebook)
        frame3 = ttk.Frame(self.notebook)
        frame4 = ttk.Frame(self.notebook)
        frame5 = ttk.Frame(self.notebook)
        frame6 = ttk.Frame(self.notebook)
        frame7 = ttk.Frame(self.notebook)


        frame1.pack(fill= tk.BOTH, expand=True)
        frame2.pack(fill= tk.BOTH, expand=True)
        frame3.pack(fill= tk.BOTH, expand=True)
        frame4.pack(fill= tk.BOTH, expand=True)
        frame5.pack(fill= tk.BOTH, expand=True)
        frame6.pack(fill= tk.BOTH, expand=True)
        frame7.pack(fill= tk.BOTH, expand=True)


        self.notebook.add(frame1, text = "Target")
        self.notebook.add(frame2, text = "Form Requester")
        self.notebook.add(frame3, text = "Window 3")
        self.notebook.add(frame4, text = "Window 4")
        self.notebook.add(frame5, text = "Window 5")
        self.notebook.add(frame6, text = "Window 6")
        self.notebook.add(frame7, text = "Window 7")

 
        # END OF TABS SECTION
 

        # TARGET SECTION



        # END OF TARGET SECTION


        # FORM_REQUESTER SECTION

        frame2.grid_columnconfigure(1, weight=1)
        frame2.grid_columnconfigure(2, weight=1)

        self.title_label = tk.Label(frame2, text="Enter URL of the page that contains the form:")
        self.title_label.grid(row=0, column=1, columnspan=2, pady=5)

        self.url_container = tk.Entry(frame2, width=50)
        self.url_container.grid(row=1, column=1, padx=20, sticky=E)

        self.start_button = tk.Button(frame2, text="Start", command=self.fr_start)
        self.start_button.grid(row=1, column=2, sticky=W)



        self.textbox = tk.Text(frame2, height=25)
        self.textbox.grid(row=3, column=1, padx=20, pady=20, columnspan=2)


        # END OF FORM_REQUESTER SECTION





    


 
 
if __name__ == "__main__":
    root = tk.Tk()
    window = Window(root)
    root.mainloop()