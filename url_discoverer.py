import threading
import tkinter as tk
from tkinter import filedialog as fd
from tkinter import BOTH, E, EW, W, Toplevel, ttk
from tkinter import messagebox
from tkinter.messagebox import showerror
from threading import Thread
from xml import dom
import requests
import time
from concurrent.futures import ThreadPoolExecutor, thread
import os
import json

class Discoverer:

    # NEED TO ADD RECURSIVE METHOD

    def __init__(self, url, wordlist, label_output, textbox_output, domain):
        self.url = url
        self.wordlist = wordlist
        self.label_output = label_output
        self.textbox_output = textbox_output
        self.domain = domain

        self.valid_urls_list = list()


    def threading(self):
        self.thread = Thread(target=self.discoverer_controller)
        self.thread.start()

    def thread_controller(self):
        if self.thread.is_alive():
            self.pool.shutdown(wait=False, cancel_futures=True)
            # NEED TO LOOP THROUGH JSON TO CHECK IF URL IS ALREADY KNOWN + APPEND INSTEAD OF OVERWRITING
            with open(f"Targets/{self.domain}/valid_urls.json", "w") as f:
                json.dump(self.valid_urls_list, f)


    def discoverer_worker(self, url):
        url = url.strip("\n")
        self.label_output.set(url)
        if requests.get(url).status_code == 200:
            self.textbox_output.insert("end", url + "\n")
            self.valid_urls_list.append(url)
            print(url)

        
             
    def discoverer_controller(self):
        url_list = []
        start_time = time.time()
        with open(self.wordlist) as wordlist:
            for line in wordlist:
                url_list.append(f"{self.url}/{line}")
        try:
            with ThreadPoolExecutor(max_workers=16) as self.pool:
                self.pool.map(self.discoverer_worker,url_list)
        except Exception:
            pass
        end_time = time.time()
        print("Time taken", end_time - start_time)


