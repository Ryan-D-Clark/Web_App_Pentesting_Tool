from cgitb import text
import threading
import tkinter as tk
from tkinter import filedialog as fd
from tkinter import BOTH, E, EW, W, Toplevel, ttk
from tkinter import messagebox
from tkinter.messagebox import showerror
from threading import Thread
from xml import dom
import requests
import time
from concurrent.futures import ThreadPoolExecutor, thread
import os

class Discoverer:

    def __init__(self, url, wordlist, label_output, textbox_output, domain):
        self.url = url
        self.wordlist = wordlist
        self.label_output = label_output
        self.textbox_output = textbox_output
        self.domain = domain
        self.stop_thread = threading.Event()


    def threading(self):
        self.thread = Thread(target=self.discoverer_controller)
        self.thread.start()

    def thread_monitor(self):
        if self.thread.is_alive():
            self.stop_thread.set()
            

    def discoverer(self, url):
        url = url.strip("\n")
        self.label_output.set(url)
        if requests.get(url).status_code == 200:
            self.textbox_output.insert("end", url + "\n")
            print(url)
        if self.stop_thread.is_set():
            # REPEATS FOR EACH THREAD, NEEDS FIXING
            self.pool.shutdown(wait=False, cancel_futures=True)
            return
        
             
    def discoverer_controller(self):
        url_list = []
        start_time = time.time()
        with open(self.wordlist) as wordlist:
            for line in wordlist:
                url_list.append(f"{self.url}/{line}")
        try:
            with ThreadPoolExecutor(max_workers=6) as self.pool:
                self.pool.map(self.discoverer,url_list)
        except Exception:
            pass
        end_time = time.time()
        print("Time taken", end_time - start_time)


